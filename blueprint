# Core MVP polish (finish Phase 1)





3. **Provider health probe**

* On startup/`/health`, ping `OLLAMA_HOST/api/tags` (or a tiny generate) and report provider status.
* Acceptance: `/health` includes `provider_status: "ok"|"down"`.



---------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------
# Phase 3 — Safe tools (allowlist)

7. **Tool protocol & sandbox**

* Simple contract like: model emits `CALL_TOOL: calc | 12*(7+1)`.
* Parser: allowlist, max length, safe charset; reject otherwise.
* Tools: `calc` (safe eval for `0-9()+-*/.`), `now()` (ISO time).
* Acceptance: `"agent":"code"` answers math by calling `calc`; malformed tool calls are rejected safely.

8. **Agent profiles**

* `agents/base.py` exposes `AgentSpec(name, system_path, model, tools=[])`.
* `agents/general.py`, `agents/code_math.py` register specs; `/agents` returns these.
* Acceptance: `/agents` shows real agent list; `/chat` enforces chosen agent’s tool allowlist and default model.

---------------------------------------------------------------------------------------------------
# Phase 4 — Switchable backend

9. **OpenAI provider**

* `providers/openai.py` mirrors `generate(...)` interface (stream + non-stream).
* Config: `PROVIDER=ollama|openai`; `OPENAI_API_KEY` in `.env`.
* `/models` endpoint: expose active provider + available models (static or queried).
* Acceptance: flip to OpenAI in `.env`; restart; `/chat` works unchanged.

---------------------------------------------------------------------------------------------------
# Phase 5 — Basic security & hygiene

10. **Rate limiting (in-memory)**

* e.g., 30 req/min per IP; return 429 with `Retry-After`.
* Acceptance: hammer endpoint → 429s after threshold.

11. **Request size & message caps**

* Reject body > e.g., 64KB; enforce `message` length (you already validate); return 413/422.
* Acceptance: oversized payload → 413.

12. **CORS & optional API key**

* CORS allowlist (your phone/web client); optional `X-API-KEY` header when exposed beyond LAN.
* Acceptance: unknown origin blocked; correct origin allowed.

13. **Timeouts & concurrency**

* Uvicorn: set `--timeout-keep-alive`, low workers (Pi), `--limit-max-requests`; provider timeouts already OK.
* Acceptance: long-running call doesn’t lock the server; new calls still accepted.
---------------------------------------------------------------------------------------------------

# Phase 6 — Light persistence & ops (optional but useful)

14. **SQLite conversation store**

* Tables: `conversations(conversation_id, created_at)`, `messages(conversation_id, role, content, ts)`.
* Toggle via config `PERSIST_MEMORY=true`.
* Acceptance: restart server; prior conversation loads with same `conversation_id`.

15. **Admin utilities**

* `/admin/export?conversation_id=...` (protected) dumps JSON.
* `/health` augments: provider OK, DB OK, version, build time.
* Acceptance: you can export a convo and verify JSON.
---------------------------------------------------------------------------------------------------

# Phase 7 — Tiny RAG starter (optional)

16. **Docs search tool**

* Whitelisted folder `rag_docs/`; TF-IDF or simple keyword top-k.
* Tool: `search_docs(query)` returns `[(doc_id, snippet)]`; agent cites ids.
* Acceptance: ask a question answerable from a doc; reply includes snippet ids.

# Non-functional “done” items (apply as you go)

* **Tests (pytest)**: smoke for `/health`, `/agents`, `/chat` (mock provider), and rate limit.
  Acceptance: `pytest -q` green.
* **README + .env.example**: exact run steps for Pi; all env keys documented.
* **Versioning**: set `FastAPI(title=..., version="0.1.0")`; update on changes.
* **CI (optional)**: lint + test on push (even a tiny GitHub Action).
* **Pi tuning**: prefer 1–2 workers, disable access logs if noisy, consider `--http 'httptools'` for performance, and keep models small (qwen2.5:3b works well).

---------------------------------------------------------------------------------------------------
